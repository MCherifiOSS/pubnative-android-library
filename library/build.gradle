//==================================================================================================
// PROJECT
//==================================================================================================
version=project.hasProperty("version")?project.property("version"):"1.0.0"
group=project.hasProperty("group")?project.property("group"):"net.pubntive"
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.0'
        // BINTRAY
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
        // COVERALLS
        classpath 'net.saliman:gradle-cobertura-plugin:2.3.1'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3'
    }
}
task projectInfo << {
    println "======================================================================================"
    println " PROJECT INFO"
    println "--------------------------------------------------------------------------------------"
    println " Gradle: ${group}:${project.name}:${version}"
    println " Project: ${project.name}"
    println " Version: ${version} (${System.getenv("CIRCLE_BUILD_NUM")})"
    println " Bintray: "
    println "   - user: ${System.getenv("BINTRAY_USER")}"
    println "   - key: ${System.getenv("BINTRAY_API_KEY")}"
    println " Fabric: "
    println "   - secret: ${System.getenv("FABRIC_API_SECRET")}"
    println "   - key: ${System.getenv("FABRIC_API_KEY")}"
    println "======================================================================================"
}
//==================================================================================================
// ANDROID
//==================================================================================================
apply plugin: 'com.android.library'
android {
    compileSdkVersion 10
    buildToolsVersion "23.0.1"
    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 10
        versionCode System.getenv("CIRCLE_BUILD_NUM")?:1
        versionName version
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.google.code.gson:gson:2.4'
    compile "net.pubnative:url_driller:1.3.0"
    compile 'net.pubnative:advertising_id_client:1.0.1'

    // JVM tests
    testCompile 'junit:junit:4.12'
    testCompile 'com.squareup.assertj:assertj-android:1.0.0'
    testCompile 'org.robolectric:robolectric:3.0'
    testCompile 'org.mockito:mockito-core:1.+'
}
//==================================================================================================
// COVERALLS
//==================================================================================================
apply plugin: "net.saliman.cobertura"
apply plugin: "com.github.kt3k.coveralls"
cobertura.coverageFormats = ['html', 'xml']
//==================================================================================================
// BINTRAY
//==================================================================================================
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                name project.name
                description "Pubnative API library fro Android"
                url "http://www.pubnative.net"
                licenses {
                    license {
                        name "MIT"
                        url "https://opensource.org/licenses/MIT"
                    }
                }
                developers {
                    developer {
                        id "cerberillo"
                        name "David Martin"
                        email "david@martinmacias.com"
                    }
                }
                scm {
                    connection "${project.property("repositoryURL")}.git"
                    developerConnection "${project.property("repositoryURL")}.git"
                    url project.property("repositoryURL")
                }
            }
        }
    }
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
bintray {

    user = System.getenv("BINTRAY_USER")
    key = System.getenv("BINTRAY_API_KEY")

    pkg {
        configurations = ['archives']
        userOrg = 'pubnative'
        repo = 'maven'
        name = project.name
        websiteUrl = project.property("repositoryURL")
        issueTrackerUrl = "${project.property("repositoryURL")}/issues"
        vcsUrl = "${project.property("repositoryURL")}.git"
        labels = ['pubnative', 'advertising', 'ad']
        licenses = ['MIT']
        version {
            name = version
            vcsTag = version
        }
    }
}
